# <로컬 프로젝트 경로>/nginx/default.conf
server {
    listen 80; # Nginx가 외부에서 80번 포트로 요청을 받음
    server_name mcpanda.co.kr www.mcpanda.co.kr;

    # HTTP -> HTTPS 리다이렉트 설정 (권장)
    return 301 https://$host$request_uri;

}

server {
    listen 443 ssl;
    server_name mcpanda.co.kr www.mcpanda.co.kr; # 실제 도메인으로 변경

    # Certbot으로 발급받은 인증서 파일 경로 지정
    ssl_certificate /etc/letsencrypt/live/mcpanda.co.kr/fullchain.pem; # 마운트된 경로
    ssl_certificate_key /etc/letsencrypt/live/mcpanda.co.kr/privkey.pem; # 마운트된 경로

    # 권장 SSL/TLS 설정 (선택 사항, 보안 강화)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;

    location / {
        # "frontend"는 Docker 네트워크 내에서 Next.js 컨테이너를 가리키는 이름입니다.
        # (Docker Compose 사용 시 서비스 이름, 단독 실행 시 컨테이너 이름 또는 IP)
        # 여기서는 Docker Compose를 사용할 것이므로 서비스 이름을 사용합니다.
        proxy_pass http://frontend:3000; # Next.js 앱은 내부적으로 3000번 포트 사용
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 필요에 따라 다른 location 블록 추가 (예: 백엔드 프록시)
    # location /api/ {
    #    proxy_pass http://backend:8080; # backend는 Docker 서비스 이름
    #    # ... proxy 설정 ...
    # }

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}